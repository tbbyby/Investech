<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.investech.mapper.BacktestMapper">
    
    <resultMap id="BaseResultMap" type="com.investech.entity.Backtest">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="backtest_code" property="backtestCode" jdbcType="VARCHAR"/>
        <result column="backtest_name" property="backtestName" jdbcType="VARCHAR"/>
        <result column="strategy_code" property="strategyCode" jdbcType="VARCHAR"/>
        <result column="start_date" property="startDate" jdbcType="TIMESTAMP"/>
        <result column="end_date" property="endDate" jdbcType="TIMESTAMP"/>
        <result column="initial_capital" property="initialCapital" jdbcType="DECIMAL"/>
        <result column="final_capital" property="finalCapital" jdbcType="DECIMAL"/>
        <result column="total_return" property="totalReturn" jdbcType="DECIMAL"/>
        <result column="annual_return" property="annualReturn" jdbcType="DECIMAL"/>
        <result column="max_drawdown" property="maxDrawdown" jdbcType="DECIMAL"/>
        <result column="sharpe_ratio" property="sharpeRatio" jdbcType="DECIMAL"/>
        <result column="volatility" property="volatility" jdbcType="DECIMAL"/>
        <result column="win_rate" property="winRate" jdbcType="DECIMAL"/>
        <result column="profit_loss_ratio" property="profitLossRatio" jdbcType="DECIMAL"/>
        <result column="benchmark_return" property="benchmarkReturn" jdbcType="VARCHAR"/>
        <result column="benchmark_max_drawdown" property="benchmarkMaxDrawdown" jdbcType="VARCHAR"/>
        <result column="benchmark_sharpe_ratio" property="benchmarkSharpeRatio" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="result_data" property="resultData" jdbcType="VARCHAR"/>
        <result column="creator_id" property="creatorId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, backtest_code, backtest_name, strategy_code, start_date, end_date, initial_capital, final_capital,
        total_return, annual_return, max_drawdown, sharpe_ratio, volatility, win_rate, profit_loss_ratio,
        benchmark_return, benchmark_max_drawdown, benchmark_sharpe_ratio, status, result_data, creator_id,
        create_time, update_time
    </sql>
    
    <select id="findByBacktestCode" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM backtest
        WHERE backtest_code = #{backtestCode}
    </select>
    
    <select id="findById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM backtest
        WHERE id = #{id}
    </select>
    
    <select id="findAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM backtest
        ORDER BY create_time DESC
    </select>
    
    <select id="findByStrategyCode" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM backtest
        WHERE strategy_code = #{strategyCode}
        ORDER BY create_time DESC
    </select>
    
    <select id="findByCreatorId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM backtest
        WHERE creator_id = #{creatorId}
        ORDER BY create_time DESC
    </select>
    
    <select id="findByStatus" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM backtest
        WHERE status = #{status}
        ORDER BY create_time DESC
    </select>
    
    <select id="findByCondition" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM backtest
        WHERE 1=1
        <if test="backtestCode != null and backtestCode != ''">
            AND backtest_code LIKE CONCAT('%', #{backtestCode}, '%')
        </if>
        <if test="backtestName != null and backtestName != ''">
            AND backtest_name LIKE CONCAT('%', #{backtestName}, '%')
        </if>
        <if test="strategyCode != null and strategyCode != ''">
            AND strategy_code = #{strategyCode}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="creatorId != null">
            AND creator_id = #{creatorId}
        </if>
        ORDER BY create_time DESC
    </select>
    
    <insert id="insert" parameterType="com.investech.entity.Backtest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO backtest (backtest_code, backtest_name, strategy_code, start_date, end_date, initial_capital,
                             final_capital, total_return, annual_return, max_drawdown, sharpe_ratio, volatility,
                             win_rate, profit_loss_ratio, benchmark_return, benchmark_max_drawdown, benchmark_sharpe_ratio,
                             status, result_data, creator_id, create_time, update_time)
        VALUES (#{backtestCode}, #{backtestName}, #{strategyCode}, #{startDate}, #{endDate}, #{initialCapital},
                #{finalCapital}, #{totalReturn}, #{annualReturn}, #{maxDrawdown}, #{sharpeRatio}, #{volatility},
                #{winRate}, #{profitLossRatio}, #{benchmarkReturn}, #{benchmarkMaxDrawdown}, #{benchmarkSharpeRatio},
                #{status}, #{resultData}, #{creatorId}, NOW(), NOW())
    </insert>
    
    <update id="update" parameterType="com.investech.entity.Backtest">
        UPDATE backtest
        SET backtest_code = #{backtestCode},
            backtest_name = #{backtestName},
            strategy_code = #{strategyCode},
            start_date = #{startDate},
            end_date = #{endDate},
            initial_capital = #{initialCapital},
            final_capital = #{finalCapital},
            total_return = #{totalReturn},
            annual_return = #{annualReturn},
            max_drawdown = #{maxDrawdown},
            sharpe_ratio = #{sharpeRatio},
            volatility = #{volatility},
            win_rate = #{winRate},
            profit_loss_ratio = #{profitLossRatio},
            benchmark_return = #{benchmarkReturn},
            benchmark_max_drawdown = #{benchmarkMaxDrawdown},
            benchmark_sharpe_ratio = #{benchmarkSharpeRatio},
            status = #{status},
            result_data = #{resultData},
            creator_id = #{creatorId},
            update_time = NOW()
        WHERE id = #{id}
    </update>
    
    <delete id="deleteById">
        DELETE FROM backtest WHERE id = #{id}
    </delete>
    
</mapper> 